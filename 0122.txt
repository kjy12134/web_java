2019/1/22/화
* web

* 순서
- 웹에서 요청 (request) > 프론트 컨트롤러(servlet) > url을 factory에 등록(map구조, <url주소, 각 ctrl 객체>) 
> url(key)에 해당하는 컨트롤러(value)에서 작업 후 프론트 컨트롤러로 보냄 > 컨트롤러의 메소드 호출 > view 호출 > forward 방식으로 response  //////// presentation layer

- 프론트 컨트롤러로 보내기 전에, 해당 컨트롤러에서 객체화 작업(vo) > 서비스 호출* > dao > db 접근

* 서비스
- 비지니스 로직 작업
- 컨트롤러와 dao 사이에서 중간다리 역할!!!
- 서비스를 거치지 않고 바로 dao나 컨트롤러로 가면 안된다.

* 프론트에서의 변수이름, VO 내 멤버변수 이름, db테이블 내 컬럼 이름 세 개 모두 동일하게


- redirect(jsp url 노출) / dispatcher(노출되지 않음) 
- lib 폴더에는 *.jar 
- maven 빌더툴을 이용해서 라이브러리 관리(필요한 라이브러리 다운 받아줌, 유틸 라이브러리를 jar로 만들어서 공유)

lib
-orgjson.jar : 비동기방식으로 데이터 주고받을 때 json형식으로 받기 위한 라이브러리

- jsp내에서 vo객체 사용법 (EL문법)
- ${객체명.프로퍼티} 